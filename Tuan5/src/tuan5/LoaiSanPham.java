/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tuan5;

import java.awt.Component;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import javax.swing.DefaultListModel;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Admin
 */
public class LoaiSanPham extends javax.swing.JFrame {

    /**
     * Creates new form LoaiSanPham
     */
    public LoaiSanPham() {
        initComponents();
        showListCat();
        handleShowDataIntoComboBox();
    }

    String valueListSelected = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listCat = new javax.swing.JList<>();
        btnNewCat = new javax.swing.JButton();
        btnUpdateCat = new javax.swing.JButton();
        btnRemoveCat = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cboCat = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtProductID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDesc = new javax.swing.JTextArea();
        btnNewProduct = new javax.swing.JButton();
        btnSaveProduct = new javax.swing.JButton();
        btnRemoveProduct = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)), "Danh Mục Sản Phẩm"));

        listCat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listCatMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(listCat);

        btnNewCat.setText("New");
        btnNewCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCatActionPerformed(evt);
            }
        });

        btnUpdateCat.setText("Update");
        btnUpdateCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCatActionPerformed(evt);
            }
        });

        btnRemoveCat.setText("Remove");
        btnRemoveCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveCatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(btnNewCat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateCat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveCat)
                .addContainerGap(82, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewCat)
                    .addComponent(btnUpdateCat)
                    .addComponent(btnRemoveCat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setText("Thông tin chi tiết");

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Unit Price", "Quantity", "Description", "CatName"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        jLabel2.setText("Category");

        jLabel3.setText("ProductID");

        jLabel4.setText("ProductName");

        jLabel5.setText("Unit Price");

        txtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPriceActionPerformed(evt);
            }
        });

        jLabel6.setText("Quantity");

        jLabel7.setText("Description");

        txtDesc.setColumns(20);
        txtDesc.setRows(5);
        jScrollPane3.setViewportView(txtDesc);

        btnNewProduct.setText("New");
        btnNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewProductActionPerformed(evt);
            }
        });

        btnSaveProduct.setText("Save");
        btnSaveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveProductActionPerformed(evt);
            }
        });

        btnRemoveProduct.setText("Remove");
        btnRemoveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProductActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel8.setText("Quản lý sản phẩm");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cboCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtProductID)
                                    .addComponent(txtProductName)
                                    .addComponent(txtPrice)
                                    .addComponent(txtQuantity)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(204, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(250, 250, 250))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(357, 357, 357))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNewProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveProduct)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveProduct)
                        .addGap(242, 242, 242))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 4, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addGap(13, 13, 13)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cboCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtProductID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtProductName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel7)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNewProduct)
                            .addComponent(btnSaveProduct)
                            .addComponent(btnRemoveProduct))
                        .addGap(59, 59, 59))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPriceActionPerformed

    private void listCatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listCatMouseClicked
        // TODO add your handling code here:
        valueListSelected = (String) listCat.getSelectedValue();
        String query = "SELECT * FROM `sanpham` INNER JOIN loaisp on sanpham.Maloai = loaisp.Maloai WHERE loaisp.Tenloai = '" + valueListSelected + "'";
        PreparedStatement ps;
        ResultSet rs;
        DefaultTableModel tblModel = (DefaultTableModel) tblSanPham.getModel();
        tblModel.setRowCount(0);
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {
                String id = rs.getString("ProductId");
                String productName = rs.getString("ProductName");
                String price = String.valueOf(rs.getInt("UnitPrice"));
                String desc = rs.getString("Description");
                String quantity = String.valueOf(rs.getInt("Quantity"));
                String catName = rs.getString("Tenloai");

                String tbData[] = {id, productName, price, quantity, desc, catName};
                tblModel.addRow(tbData);

            }
        } catch (SQLException ex) {
        }


    }//GEN-LAST:event_listCatMouseClicked

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:

        int i = tblSanPham.getSelectedRow();
        TableModel model = tblSanPham.getModel();
        txtProductID.setText(model.getValueAt(i, 0).toString());
        txtProductName.setText(model.getValueAt(i, 1).toString());
        txtPrice.setText(model.getValueAt(i, 2).toString());
        txtQuantity.setText(model.getValueAt(i, 3).toString());
        txtDesc.setText(model.getValueAt(i, 4).toString());

        String a = model.getValueAt(i, 5).toString();
        for (int j = 0; j < cboCat.getItemCount(); j++) {
            if (a.equals(cboCat.getItemAt(j).toString().split(" - ")[1])) {
                cboCat.setSelectedIndex(j);
            }
        }

    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnNewCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCatActionPerformed
        // TODO add your handling code here:
        cateInfomation form = new cateInfomation("", "");
        form.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnNewCatActionPerformed

    private void btnUpdateCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCatActionPerformed
        // TODO add your handling code here:
        String s = (String) listCat.getSelectedValue();
        if (!s.equals("")) {
            cateInfomation form = new cateInfomation(s, "SUA");
            form.setVisible(true);
            this.setVisible(false);

        } else {
            JOptionPane.showMessageDialog(null, "Hãy Chọn Loại Để Sửa");
        }

    }//GEN-LAST:event_btnUpdateCatActionPerformed

    private void btnRemoveCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveCatActionPerformed
        // TODO add your handling code here:
        String s = (String) listCat.getSelectedValue();
        String query = "SELECT COUNT(*) as SL FROM `sanpham` INNER JOIN loaisp on sanpham.Maloai = loaisp.Maloai WHERE loaisp.Tenloai = '" + s + "'";
        PreparedStatement ps;
        PreparedStatement ps2;

        ResultSet rs;
        Component panel = null;
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {
                int SL = rs.getInt("SL");
                if (SL > 0) {
                    int n = JOptionPane.showConfirmDialog(
                            panel,
                            "Dữ liệu còn rằng buộc. Bạn có chắc muốn xóa????",
                            "Đồng Ý",
                            JOptionPane.YES_NO_OPTION);
                    if (n == JOptionPane.YES_OPTION) {
                        String queryDelete = "DELETE FROM `loaisp` WHERE `Tenloai` = '" + s + "'";
                        try {
                            ps2 = Data.DatabaseInfo.getConnection().prepareStatement(queryDelete);
                            if (ps2.executeUpdate() > 0) {
                                JOptionPane.showMessageDialog(null, "Xóa Thành Công");
                                showListCat();
                            }

                        } catch (SQLException ex) {
                        }
                    }
                } else {
                    String queryDelete = "DELETE FROM `loaisp` WHERE `Tenloai` = '" + s + "'";
                    try {
                        ps2 = Data.DatabaseInfo.getConnection().prepareStatement(queryDelete);
                        System.out.println("query: " + queryDelete);
                        if (ps2.executeUpdate() > 0) {
                            JOptionPane.showMessageDialog(null, "Xóa Thành Công");
                            showListCat();
                        }
                    } catch (SQLException ex) {
                    }
                }
            }
        } catch (SQLException ex) {
        }

    }//GEN-LAST:event_btnRemoveCatActionPerformed

    private void btnNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewProductActionPerformed
        // TODO add your handling code here:
        txtProductID.setText("");
        txtDesc.setText("");
        txtPrice.setText("");
        txtProductName.setText("");
        txtQuantity.setText("");
    }//GEN-LAST:event_btnNewProductActionPerformed

    private void btnRemoveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProductActionPerformed
        // TODO add your handling code here:
        PreparedStatement ps2;
        int i = tblSanPham.getSelectedRow();
        if (i < 0) {
            JOptionPane.showMessageDialog(null, "Vui Lòng Chọn Sản Phẩm Để Xóa");
        } else {
            String queryDelete = "DELETE FROM `sanpham` WHERE `ProductId` = '" + txtProductID.getText() + "'";
            System.out.println("query: " + queryDelete);
            try {
                ps2 = Data.DatabaseInfo.getConnection().prepareStatement(queryDelete);
                if (ps2.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Xóa Thành Công");
                    String query = "SELECT * FROM `sanpham` INNER JOIN loaisp on sanpham.Maloai = loaisp.Maloai WHERE loaisp.Tenloai = '" + valueListSelected + "'";
                    PreparedStatement ps;
                    ResultSet rs;
                    DefaultTableModel tblModel = (DefaultTableModel) tblSanPham.getModel();
                    tblModel.setRowCount(0);
                    try {
                        ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

                        rs = ps.executeQuery();

                        while (rs.next()) {
                            String id = rs.getString("ProductId");
                            String productName = rs.getString("ProductName");
                            String price = String.valueOf(rs.getInt("UnitPrice"));
                            String desc = rs.getString("Description");
                            String quantity = String.valueOf(rs.getInt("Quantity"));
                            String catName = rs.getString("Tenloai");

                            String tbData[] = {id, productName, price, quantity, desc, catName};
                            tblModel.addRow(tbData);

                        }
                    } catch (SQLException ex) {
                    }
                }
            } catch (SQLException ex) {
                System.out.println("ex:" + ex);
            }
        }
    }//GEN-LAST:event_btnRemoveProductActionPerformed

    private void btnSaveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveProductActionPerformed
        // TODO add your handling code here:

        TableModel model = tblSanPham.getModel();
        PreparedStatement ps, ps2;
        int checkExits = 0;
        String cboSelected = (String) cboCat.getSelectedItem();
        String[] parts = cboSelected.split(" - ");
        for (int i = 0; i < model.getRowCount(); i++) {
            if (txtProductID.getText().equals(model.getValueAt(i, 0))) {
                checkExits++;
            }
        }
        if (checkExits > 0) {
            String query = "UPDATE `sanpham` SET `ProductId`=?,`ProductName`=?,`UnitPrice`=?,`Maloai`=?,`Quantity`=?,`Description`=? WHERE `ProductId` = ?";
            try {
                ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

                ps.setString(1, txtProductID.getText());
                ps.setString(2, txtProductName.getText());
                ps.setString(3, txtPrice.getText());
                ps.setString(4, parts[0]);
                ps.setString(5, txtQuantity.getText());
                ps.setString(6, txtDesc.getText());
                ps.setString(7, txtProductID.getText());

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Cập Nhật Thành Công");
                }

            } catch (SQLException ex) {
            }
        } else {
            String query = "INSERT INTO `sanpham`(`ProductId`, `ProductName`, `UnitPrice`, `Maloai`, `Quantity`, `Description`) VALUES (?,?,?,?,?,?)";
            try {
                ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

                ps.setString(1, txtProductID.getText());
                ps.setString(2, txtProductName.getText());
                ps.setString(3, txtPrice.getText());
                ps.setString(4, parts[0]);
                ps.setString(5, txtQuantity.getText());
                ps.setString(6, txtDesc.getText());

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Thêm Thành Công");
                }

            } catch (SQLException ex) {
            }
        }

    }//GEN-LAST:event_btnSaveProductActionPerformed

    DefaultListModel demoList = new DefaultListModel();

    public void showListCat() {
        PreparedStatement ps;
        ResultSet rs;
//        DefaultListModel listModel = (DefaultListModel) listCat.getModel();
//        listModel.removeAllElements();
        String query = "Select * from loaisp";
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);
            rs = ps.executeQuery();
            while (rs.next()) {
                demoList.addElement(rs.getString("Tenloai"));
            }
        } catch (SQLException ex) {
        }

        listCat.setModel(demoList);

    }

    public void handleShowDataIntoComboBox() {
        PreparedStatement ps;
        ResultSet rs;

        cboCat.removeAllItems();

        String query = "SELECT * FROM `loaisp`";
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {
                cboCat.addItem("" + rs.getString("Maloai") + " - " + rs.getString("Tenloai") + "");
            }

        } catch (SQLException ex) {
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoaiSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoaiSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoaiSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoaiSanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoaiSanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewCat;
    private javax.swing.JButton btnNewProduct;
    private javax.swing.JButton btnRemoveCat;
    private javax.swing.JButton btnRemoveProduct;
    private javax.swing.JButton btnSaveProduct;
    private javax.swing.JButton btnUpdateCat;
    private javax.swing.JComboBox<String> cboCat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listCat;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextArea txtDesc;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductID;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
}
