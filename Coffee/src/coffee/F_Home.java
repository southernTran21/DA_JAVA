/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package coffee;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author nguye
 */
public class F_Home extends javax.swing.JFrame {

    /**
     * Creates new form F_Home
     */
    public F_Home() {
        initComponents();
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPanelHome = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtID_Account = new javax.swing.JTextField();
        txtFullName_Account = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnHuy = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAccount = new javax.swing.JTable();
        txtUsername_Account = new javax.swing.JTextField();
        txtPassword_Account = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCatName = new javax.swing.JTextField();
        btnSaveCat = new javax.swing.JButton();
        btnHuyCat = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblCategories = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNameProduct = new javax.swing.JTextField();
        txtPriceProduct = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnDeleteCat = new javax.swing.JButton();
        btnDeleteProduct = new javax.swing.JButton();
        btnSaveProduct = new javax.swing.JButton();
        btnCancelProduct = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblProduct = new javax.swing.JTable();
        cboCategories = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCatOrder = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblProductOrder = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblListOrder = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtPhaiTra = new javax.swing.JTextField();
        txtKhachDua = new javax.swing.JTextField();
        txtTraLai = new javax.swing.JTextField();
        btnAcceptSale = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        txtGiamGia = new javax.swing.JTextField();
        btnClearAll = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabPanelHome.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        tabPanelHome.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabPanelHomeStateChanged(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 51));
        jLabel1.setText("Đăng Kí Tài Khoản");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("Họ Và Tên:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("UserName:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("PassWord:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("ID:");

        txtID_Account.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtID_Account.setEnabled(false);

        btnSave.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnHuy.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnHuy.setText("Hủy");
        btnHuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("Danh Sách Tài Khoản");

        tblAccount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblAccount.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Họ Và Tên", "UserName", "PassWord"
            }
        ));
        tblAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblAccountMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblAccount);

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnDelete)
                        .addGap(55, 55, 55)
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnHuy))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID_Account, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(txtFullName_Account)
                            .addComponent(txtUsername_Account)
                            .addComponent(txtPassword_Account))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 253, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel8))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtID_Account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFullName_Account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtUsername_Account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(txtPassword_Account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave)
                            .addComponent(btnHuy)
                            .addComponent(btnDelete))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 694, Short.MAX_VALUE))
                .addContainerGap())
        );

        tabPanelHome.addTab("QL Tài Khoản", jPanel2);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 51, 51));
        jLabel6.setText("Danh Mục Thực Đơn");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel7.setText("Tên Danh Mục:");

        btnSaveCat.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnSaveCat.setText("Lưu");
        btnSaveCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCatActionPerformed(evt);
            }
        });

        btnHuyCat.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnHuyCat.setText("Hủy");
        btnHuyCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyCatActionPerformed(evt);
            }
        });

        tblCategories.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblCategories.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên Danh Mục"
            }
        ));
        tblCategories.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCategoriesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblCategories);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("Danh Sách Món");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel10.setText("Tên Món:");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel11.setText("Danh Mục:");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel12.setText("Giá:");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel13.setText("VND");

        btnDeleteCat.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnDeleteCat.setText("Xóa");
        btnDeleteCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCatActionPerformed(evt);
            }
        });

        btnDeleteProduct.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnDeleteProduct.setText("Xóa");
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });

        btnSaveProduct.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnSaveProduct.setText("Lưu");
        btnSaveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveProductActionPerformed(evt);
            }
        });

        btnCancelProduct.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        btnCancelProduct.setText("Hủy");
        btnCancelProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelProductActionPerformed(evt);
            }
        });

        tblProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên Món", "Giá Bán", "Danh Mục"
            }
        ));
        tblProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblProduct);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtCatName, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(429, 429, 429)
                        .addComponent(jLabel9)))
                .addGap(815, 815, 815))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtNameProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSaveProduct)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(cboCategories, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPriceProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 909, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(jPanel5Layout.createSequentialGroup()
                                        .addComponent(btnDeleteCat)
                                        .addGap(89, 89, 89)
                                        .addComponent(btnSaveCat)
                                        .addGap(86, 86, 86)
                                        .addComponent(btnHuyCat)))
                                .addGap(340, 340, 340)
                                .addComponent(btnDeleteProduct)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCancelProduct)
                                .addGap(239, 239, 239)))))
                .addGap(36, 36, 36))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addGap(38, 38, 38)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtCatName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(txtNameProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtPriceProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(cboCategories, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveCat)
                    .addComponent(btnHuyCat)
                    .addComponent(btnDeleteCat)
                    .addComponent(btnSaveProduct)
                    .addComponent(btnCancelProduct)
                    .addComponent(btnDeleteProduct))
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)))
        );

        tabPanelHome.addTab("QL Menu", jPanel5);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setToolTipText("");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 51, 51));
        jLabel14.setText("Danh Mục Món");

        tblCatOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên Danh Mục"
            }
        ));
        tblCatOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCatOrderMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tblCatOrder);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 51));
        jLabel15.setText("Danh Sách Món");

        tblProductOrder = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tblProductOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên Món", "Giá Bán", "Danh Mục"
            }
        ));
        tblProductOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductOrderMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tblProductOrder);

        tblListOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên Món", "Số Lượng", "Đơn Giá", "Thành Ttiền"
            }
        ));
        jScrollPane6.setViewportView(tblListOrder);

        btnRemove.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnRemove.setText("Bớt Món");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel16.setText("Tổng Tiền:");
        jLabel16.setToolTipText("");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel17.setText("Giảm Giá:");
        jLabel17.setToolTipText("");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 51, 51));
        jLabel18.setText("Phải Trả:");
        jLabel18.setToolTipText("");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel19.setText("Khách Đưa:");
        jLabel19.setToolTipText("");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel20.setText("Trả Lại:");
        jLabel20.setToolTipText("");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel21.setText("VND");
        jLabel21.setToolTipText("");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel22.setText("%");
        jLabel22.setToolTipText("");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel23.setText("VND");
        jLabel23.setToolTipText("");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel24.setText("VND");
        jLabel24.setToolTipText("");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel25.setText("VND");
        jLabel25.setToolTipText("");

        txtTotal.setText("0");
        txtTotal.setEnabled(false);

        txtPhaiTra.setEnabled(false);

        txtTraLai.setText("0");
        txtTraLai.setEnabled(false);

        btnAcceptSale.setBackground(new java.awt.Color(0, 102, 255));
        btnAcceptSale.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnAcceptSale.setForeground(new java.awt.Color(255, 255, 255));
        btnAcceptSale.setText("Áp Dụng");
        btnAcceptSale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptSaleActionPerformed(evt);
            }
        });

        btnSubmit.setBackground(new java.awt.Color(255, 0, 0));
        btnSubmit.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Thanh Toán");

        btnClearAll.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnClearAll.setText("Xóa hết");
        btnClearAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearAllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
                    .addComponent(jLabel15)
                    .addComponent(jScrollPane5))
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                                    .addComponent(txtPhaiTra)
                                    .addComponent(txtKhachDua)
                                    .addComponent(txtGiamGia))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel23))
                                .addGap(84, 84, 84)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnAcceptSale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 112, Short.MAX_VALUE))))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTraLai, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClearAll)
                        .addGap(18, 18, 18)
                        .addComponent(btnRemove)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemove)
                            .addComponent(btnClearAll))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel21)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAcceptSale)
                                .addGap(47, 47, 47)
                                .addComponent(btnSubmit))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17)
                                    .addComponent(jLabel22)
                                    .addComponent(txtGiamGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel23)
                                    .addComponent(txtPhaiTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel24)
                                    .addComponent(txtKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel25)
                            .addComponent(txtTraLai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tabPanelHome.addTab("Bảng Oder", jPanel7);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1482, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );

        tabPanelHome.addTab("Thống Kê", jPanel6);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabPanelHome)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanelHome)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tabPanelHomeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabPanelHomeStateChanged
        // TODO add your handling code here:
        int index = tabPanelHome.getSelectedIndex();

        //panel trang quản lý nhân viên
        if (index == 0) {

            txtID_Account.setText("");
            txtFullName_Account.setText("");
            txtUsername_Account.setText("");
            txtPassword_Account.setText("");

            btnDelete.setVisible(false);
            showDataInTableAccount();

        } else if (index == 1) {
            txtCatName.setText("");
            btnDeleteCat.setVisible(false);
            btnDeleteProduct.setVisible(false);

            showDataInTableCategories(tblCategories);
            handleShowDataIntoComboBox();
            showDataInTableProducts(tblProduct);
        } else if (index == 2) {
            showDataInTableCategories(tblCatOrder);
            showDataInTableProducts(tblProductOrder);
        }
//        else {
//            JOptionPane.showMessageDialog(null, index);
//        }

    }//GEN-LAST:event_tabPanelHomeStateChanged

    private void tblAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAccountMouseClicked
        // TODO add your handling code here:
        int i = tblAccount.getSelectedRow();
        TableModel model = tblAccount.getModel();
        txtID_Account.setText(model.getValueAt(i, 0).toString());
        txtFullName_Account.setText(model.getValueAt(i, 1).toString());
        txtUsername_Account.setText(model.getValueAt(i, 2).toString());
        txtPassword_Account.setText(model.getValueAt(i, 3).toString());
        btnDelete.setVisible(true);

    }//GEN-LAST:event_tblAccountMouseClicked

    private void btnHuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyActionPerformed
        // TODO add your handling code here:
        txtID_Account.setText("");
        txtFullName_Account.setText("");
        txtUsername_Account.setText("");
        txtPassword_Account.setText("");
    }//GEN-LAST:event_btnHuyActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (txtID_Account.getText().toString().equals("")) {
            PreparedStatement ps;
            String query = "INSERT INTO `account`(`fullName`, `username`, `password`) VALUES (?,?,?)";
            try {
                ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

                ps.setString(1, txtFullName_Account.getText());
                ps.setString(2, txtUsername_Account.getText());
                ps.setString(3, txtPassword_Account.getText());

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Thêm Thành Công");
                    showDataInTableAccount();
                }

            } catch (SQLException ex) {
                Logger.getLogger(F_Register.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            PreparedStatement ps;
            String query = "UPDATE `account` SET `fullName`=?,`username`=?,`password`=? WHERE `id`=?";
            try {
                ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

                ps.setString(1, txtFullName_Account.getText());
                ps.setString(2, txtUsername_Account.getText());
                ps.setString(3, txtPassword_Account.getText());
                ps.setString(4, txtID_Account.getText());

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Sửa Thành Công");
                    showDataInTableAccount();
                }

            } catch (SQLException ex) {
                Logger.getLogger(F_Register.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        PreparedStatement ps;
        String query = "DELETE from `account` where id=?";
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            ps.setString(1, txtID_Account.getText());

            if (ps.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(null, "Xóa Thành Công");
                showDataInTableAccount();
            }

        } catch (SQLException ex) {
            Logger.getLogger(F_Register.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblCategoriesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCategoriesMouseClicked
        // TODO add your handling code here:
        int i = tblCategories.getSelectedRow();
        TableModel model = tblCategories.getModel();
        txtCatName.setText(model.getValueAt(i, 1).toString());
        btnDeleteCat.setVisible(true);
        idCatSelected = model.getValueAt(i, 0).toString();
    }//GEN-LAST:event_tblCategoriesMouseClicked

    private void btnDeleteCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCatActionPerformed
        // TODO add your handling code here:
        PreparedStatement ps;
        String query = "DELETE from `categories` where id=?";
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            ps.setString(1, idCatSelected);

            if (ps.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(null, "Xóa Thành Công");
                showDataInTableCategories(tblCategories);
            }

        } catch (SQLException ex) {
            Logger.getLogger(F_Register.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteCatActionPerformed

    private void btnHuyCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyCatActionPerformed
        // TODO add your handling code here:
        txtCatName.setText("");
        idCatSelected = "";
    }//GEN-LAST:event_btnHuyCatActionPerformed

    private void btnSaveCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCatActionPerformed
        // TODO add your handling code here:
        if (idCatSelected.equals("")) {
            PreparedStatement ps;
            String query = "INSERT INTO `categories`(`catName`) VALUES (?)";
            try {
                ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

                ps.setString(1, txtCatName.getText());

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Thêm Thành Công");
                    showDataInTableCategories(tblCategories);
                }

            } catch (SQLException ex) {
                Logger.getLogger(F_Register.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            PreparedStatement ps;
            String query = "UPDATE `categories` SET `catName`= ? WHERE `id` = ?";
            try {
                ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

                ps.setString(1, txtCatName.getText());
                ps.setString(2, idCatSelected);

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Sửa Thành Công");
                    showDataInTableCategories(tblCategories);
                }

            } catch (SQLException ex) {
                Logger.getLogger(F_Register.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveCatActionPerformed

    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
        // TODO add your handling code here:

        PreparedStatement ps;
        String query = "DELETE from `products` where id=?";
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            ps.setString(1, idProductSelected);

            if (ps.executeUpdate() > 0) {
                JOptionPane.showMessageDialog(null, "Xóa Thành Công");
                showDataInTableProducts(tblProduct);
            }

        } catch (SQLException ex) {
            Logger.getLogger(F_Register.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteProductActionPerformed

    private void tblProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductMouseClicked
        // TODO add your handling code here:
        int i = tblProduct.getSelectedRow();
        TableModel model = tblProduct.getModel();
        txtNameProduct.setText(model.getValueAt(i, 1).toString());
        txtPriceProduct.setText(model.getValueAt(i, 2).toString());
        btnDeleteProduct.setVisible(true);
        idProductSelected = model.getValueAt(i, 0).toString();

        String a = model.getValueAt(i, 3).toString();
        for (int j = 0; j < cboCategories.getItemCount(); j++) {
            if(a.equals(cboCategories.getItemAt(j).toString().split(" - ")[1])){
                cboCategories.setSelectedIndex(j);
            }
        }

    }//GEN-LAST:event_tblProductMouseClicked

    private void btnSaveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveProductActionPerformed
        // TODO add your handling code here:
        String cboSelected = (String) cboCategories.getSelectedItem();
        String[] parts = cboSelected.split(" - ");
        if (idProductSelected.equals("")) {
            PreparedStatement ps;
            String query = "INSERT INTO `products`(`productName`, catID, price) VALUES (?,?,?)";
            try {
                ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

                ps.setString(1, txtNameProduct.getText());
                ps.setString(2, parts[0]);
                ps.setString(3, txtPriceProduct.getText());

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Thêm Thành Công");
                    showDataInTableProducts(tblProduct);
                }

            } catch (SQLException ex) {
                Logger.getLogger(F_Register.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            PreparedStatement ps;
            String query = "UPDATE `products` SET `productName`=?,`catID`=?,`price`=? WHERE id=?";
            try {
                ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

                ps.setString(1, txtNameProduct.getText());
                ps.setString(2, parts[0]);
                ps.setString(3, txtPriceProduct.getText());
                ps.setString(4, idProductSelected);

                if (ps.executeUpdate() > 0) {
                    JOptionPane.showMessageDialog(null, "Sửa Thành Công");
                    showDataInTableProducts(tblProduct);
                }

            } catch (SQLException ex) {
                Logger.getLogger(F_Register.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnSaveProductActionPerformed

    private void btnCancelProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelProductActionPerformed
        // TODO add your handling code here:
        txtNameProduct.setText("");
        txtPriceProduct.setText("");
        idProductSelected = "";
    }//GEN-LAST:event_btnCancelProductActionPerformed

    private void tblCatOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCatOrderMouseClicked
        // TODO add your handling code here:
        int i = tblCatOrder.getSelectedRow();
        TableModel model = tblCatOrder.getModel();
        showDataInTableProductsForIDCat(model.getValueAt(i, 0).toString());

    }//GEN-LAST:event_tblCatOrderMouseClicked

    private void tblProductOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductOrderMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tblModel = (DefaultTableModel) tblListOrder.getModel();
        if (evt.getClickCount() == 2) {
            int i = tblProductOrder.getSelectedRow();
            TableModel model = tblProductOrder.getModel();
            if (listOrder.size() > 0) {
                for (int j = 0; j < listOrder.size(); j++) {
                    if (model.getValueAt(i, 1).toString().equals(listOrder.get(j).getProductName())) {
                        listOrder.set(j, new listOrder(model.getValueAt(i, 1).toString(), listOrder.get(j).getSL() + 1, Integer.parseInt(model.getValueAt(i, 2).toString()), ((listOrder.get(j).getSL() + 1) * Integer.parseInt(model.getValueAt(i, 2).toString()))));
                    } else {
                        listOrder.add(new listOrder(model.getValueAt(i, 1).toString(), 1, Integer.parseInt(model.getValueAt(i, 2).toString()), Integer.parseInt(model.getValueAt(i, 2).toString())));
                    }
                }
            } else {
                listOrder.add(new listOrder(model.getValueAt(i, 1).toString(), 1, Integer.parseInt(model.getValueAt(i, 2).toString()), Integer.parseInt(model.getValueAt(i, 2).toString())));
            }

        }
        tblModel.setRowCount(0);
        int total = 0;
        for (int j = 0; j < listOrder.size(); j++) {
            String tbData[] = {listOrder.get(j).getProductName(), listOrder.get(j).getSL() + "", listOrder.get(j).getPrice() + "", listOrder.get(j).getTotal() + ""};
            tblModel.addRow(tbData);
            total += listOrder.get(j).getTotal();
        }
        txtTotal.setText(total + "");
        txtPhaiTra.setText(total + "");
    }//GEN-LAST:event_tblProductOrderMouseClicked

    private void btnClearAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearAllActionPerformed
        // TODO add your handling code here:
        if (listOrder.size() > 0) {
            listOrder.clear();
            DefaultTableModel tblModel = (DefaultTableModel) tblListOrder.getModel();
            tblModel.setRowCount(0);
            txtTotal.setText("0");
            txtPhaiTra.setText("0");
        } else {
            JOptionPane.showMessageDialog(null, "Danh Sách Khách Order Đang Trống");
        }

    }//GEN-LAST:event_btnClearAllActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        int i = tblListOrder.getSelectedRow();
        if (i >= 0) {
            listOrder.remove(i);
            DefaultTableModel tblModel = (DefaultTableModel) tblListOrder.getModel();
            tblModel.setRowCount(0);
            int total = 0;
            for (int j = 0; j < listOrder.size(); j++) {
                String tbData[] = {listOrder.get(j).getProductName(), listOrder.get(j).getSL() + "", listOrder.get(j).getPrice() + "", listOrder.get(j).getTotal() + ""};
                tblModel.addRow(tbData);
                total += listOrder.get(j).getTotal();
            }
            txtTotal.setText(total + "");
            txtPhaiTra.setText(total + "");
        } else {
            JOptionPane.showMessageDialog(null, "Vui Lòng Chọn Món Cần Bớt");
        }

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnAcceptSaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptSaleActionPerformed
        // TODO add your handling code here:
        int giamGia = Integer.parseInt(txtGiamGia.getText());
        int tong = Integer.parseInt(txtTotal.getText());
        txtPhaiTra.setText((tong - (tong * giamGia / 100)) + "");
        txtGiamGia.setText("");
    }//GEN-LAST:event_btnAcceptSaleActionPerformed

    private String idCatSelected = "";
    private String idProductSelected = "";
    private ArrayList<listOrder> listOrder = new ArrayList<>();

    public void showDataInTableAccount() {
        PreparedStatement ps;
        ResultSet rs;

        DefaultTableModel tblModel = (DefaultTableModel) tblAccount.getModel();
        tblModel.setRowCount(0);

        String query = "SELECT * FROM `account`";
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {
                String id = String.valueOf(rs.getInt("id"));
                String fullName = rs.getString("fullName");
                String username = rs.getString("username");
                String password = rs.getString("password");

                String tbData[] = {id, fullName, username, password};
                tblModel.addRow(tbData);

            }

        } catch (SQLException ex) {
            Logger.getLogger(F_Home.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void showDataInTableCategories(JTable a) {
        PreparedStatement ps;
        ResultSet rs;

        DefaultTableModel tblModel = (DefaultTableModel) a.getModel();
        tblModel.setRowCount(0);

        String query = "SELECT * FROM `categories`";
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {
                String id = String.valueOf(rs.getInt("id"));
                String catName = rs.getString("catName");

                String tbData[] = {id, catName};
                tblModel.addRow(tbData);

            }

        } catch (SQLException ex) {
            Logger.getLogger(F_Home.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void handleShowDataIntoComboBox() {
        PreparedStatement ps;
        ResultSet rs;

        cboCategories.removeAllItems();

        String query = "SELECT * FROM `categories`";
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {

//                cboCategories.addItem(new categories(rs.getString("id").toString(),rs.getString("catName").toString()));
                cboCategories.addItem("" + rs.getString("id") + " - " + rs.getString("catName") + "");
            }

        } catch (SQLException ex) {
            Logger.getLogger(F_Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showDataInTableProducts(JTable a) {
        PreparedStatement ps;
        ResultSet rs;

        DefaultTableModel tblModel = (DefaultTableModel) a.getModel();
        tblModel.setRowCount(0);

        String query = "SELECT products.id as id, productName, categories.catName as catName, price FROM `products` INNER JOIN categories on products.catID = categories.id";
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {
                String id = String.valueOf(rs.getInt("id"));
                String productName = rs.getString("productName");
                String catID = rs.getString("catName");
                String price = rs.getString("price");

                String tbData[] = {id, productName, price, catID};
                tblModel.addRow(tbData);

            }

        } catch (SQLException ex) {
            Logger.getLogger(F_Home.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void showDataInTableProductsForIDCat(String idCat) {
        PreparedStatement ps;
        ResultSet rs;

        DefaultTableModel tblModel = (DefaultTableModel) tblProductOrder.getModel();
        tblModel.setRowCount(0);

        String query = "SELECT products.id as id, productName, categories.catName as catName, price FROM `products` INNER JOIN categories on products.catID = categories.id where products.catID = " + idCat;
        try {
            ps = Data.DatabaseInfo.getConnection().prepareStatement(query);

            rs = ps.executeQuery();

            while (rs.next()) {
                String id = String.valueOf(rs.getInt("id"));
                String productName = rs.getString("productName");
                String catID = rs.getString("catName");
                String price = rs.getString("price");

                String tbData[] = {id, productName, price, catID};
                tblModel.addRow(tbData);

            }

        } catch (SQLException ex) {
            Logger.getLogger(F_Home.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void Close() {

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(F_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(F_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(F_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(F_Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new F_Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptSale;
    private javax.swing.JButton btnCancelProduct;
    private javax.swing.JButton btnClearAll;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDeleteCat;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JButton btnHuy;
    private javax.swing.JButton btnHuyCat;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveCat;
    private javax.swing.JButton btnSaveProduct;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cboCategories;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane tabPanelHome;
    private javax.swing.JTable tblAccount;
    private javax.swing.JTable tblCatOrder;
    private javax.swing.JTable tblCategories;
    private javax.swing.JTable tblListOrder;
    private javax.swing.JTable tblProduct;
    public javax.swing.JTable tblProductOrder;
    private javax.swing.JTextField txtCatName;
    private javax.swing.JTextField txtFullName_Account;
    private javax.swing.JTextField txtGiamGia;
    private javax.swing.JTextField txtID_Account;
    private javax.swing.JTextField txtKhachDua;
    private javax.swing.JTextField txtNameProduct;
    private javax.swing.JTextField txtPassword_Account;
    private javax.swing.JTextField txtPhaiTra;
    private javax.swing.JTextField txtPriceProduct;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTraLai;
    private javax.swing.JTextField txtUsername_Account;
    // End of variables declaration//GEN-END:variables
}
